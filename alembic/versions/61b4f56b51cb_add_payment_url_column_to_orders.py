"""Add payment_url column to orders

Revision ID: 61b4f56b51cb
Revises: 7f1c5a2584f8
Create Date: 2025-10-06 13:46:07.955672

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '61b4f56b51cb'
down_revision = '7f1c5a2584f8'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('customer_notification_preferences')
    op.drop_table('user_security')
    op.drop_table('login_activity')
    op.drop_table('payment_methods')
    op.drop_table('seller_payment_methods')
    op.drop_constraint(op.f('notification_preferences_user_id_fkey'), 'notification_preferences', type_='foreignkey')
    op.drop_constraint(op.f('notifications_user_id_fkey'), 'notifications', type_='foreignkey')
    op.add_column('orders', sa.Column('payment_url', sa.Text(), nullable=True))
    op.add_column('orders', sa.Column('payment_reference', sa.String(length=100), nullable=True))
    op.add_column('orders', sa.Column('payment_initialized_at', sa.TIMESTAMP(), nullable=True))
    op.add_column('payments', sa.Column('authorization_url', sa.Text(), nullable=True))
    op.add_column('payments', sa.Column('access_code', sa.String(length=100), nullable=True))
    op.add_column('payments', sa.Column('reference', sa.String(length=100), nullable=True))
    op.alter_column('payments', 'seller_id',
               existing_type=sa.UUID(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('payments', 'seller_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('payments', 'reference')
    op.drop_column('payments', 'access_code')
    op.drop_column('payments', 'authorization_url')
    op.drop_column('orders', 'payment_initialized_at')
    op.drop_column('orders', 'payment_reference')
    op.drop_column('orders', 'payment_url')
    op.create_foreign_key(op.f('notifications_user_id_fkey'), 'notifications', 'profiles', ['user_id'], ['id'])
    op.create_foreign_key(op.f('notification_preferences_user_id_fkey'), 'notification_preferences', 'profiles', ['user_id'], ['id'])
    op.create_table('seller_payment_methods',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('seller_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('bank_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('account_number', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('account_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('bank_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('routing_number', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('method_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('verification_status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('country_code', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['seller_id'], ['seller_profiles.id'], name=op.f('seller_payment_methods_seller_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('seller_payment_methods_pkey'))
    )
    op.create_table('payment_methods',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('method_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('provider_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('card_last_four', sa.VARCHAR(length=4), autoincrement=False, nullable=True),
    sa.Column('card_brand', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('card_expiry_month', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('card_expiry_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bank_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('account_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('account_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('payment_methods_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('payment_methods_pkey'))
    )
    op.create_table('login_activity',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=False),
    sa.Column('user_agent', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('device_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('browser', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('os', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('session_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('login_successful', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('failure_reason', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('login_time', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('logout_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('login_activity_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('login_activity_pkey'))
    )
    op.create_table('user_security',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('two_factor_enabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('two_factor_secret', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('backup_codes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('email_notifications', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('sms_notifications', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('security_alerts', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('recovery_questions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('recovery_answers', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_security_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_security_pkey'))
    )
    op.create_table('customer_notification_preferences',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email_order_confirmations', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_order_updates', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_delivery_notifications', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_wishlist_updates', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_price_drops', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_back_in_stock', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_promotional_offers', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_newsletters', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_product_recommendations', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_account_updates', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('email_security_alerts', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('push_order_updates', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('push_delivery_notifications', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('push_promotional_offers', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=True),
    sa.Column('sms_order_confirmations', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('sms_delivery_notifications', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('sms_security_alerts', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['profiles.id'], name=op.f('customer_notification_preferences_customer_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('customer_notification_preferences_pkey'))
    )
    # ### end Alembic commands ###
